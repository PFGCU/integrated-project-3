<!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <title><%= title %></title>
      <link rel='stylesheet' href='/stylesheets/style.css' />
      <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
      <link href="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.css" rel="stylesheet">
      <script src="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js"></script>
      <script src='https://code.jquery.com/jquery-1.11.0.min.js'></script>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
      <link href="public\stylesheets\PD.css">
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
      <style>

        body {
            margin: 0;
            padding: 0;
          }
          
        #map {
            position: absolute;
            top: auto;
            left: 0;
            right: 10%;
            width: 100%;
            height: 100%;
          }
   
      </style>

</head>
<body>
  <%- include('./partials/navbar', {signed_in: signed_in}) %>
    <div id="map"></div>
    <script>
        /*
        TODO: 
            - render a map - done 
            - add a marker to the map - done 
            - dynamically add markers to the map - postponed (can't do this since we don't have any server logic)
                - [instead] loop through a JS object which contains where the markers will go 
                - add the marker to the map 
            - allow the user to add a marker to the map on click of the button 
                - Giacomo: at the moment the user will manually type their coordinates, later we'll get the coordinates via where the user clicked the map - done
                - Patrick: add an html input field - done
                - Patrick: add a html button - done
                - when the user clicks button 
                - get the content of the input field 
                - update the markers array in the above JS object - in progress
        */

        mapboxgl.accessToken = 'pk.eyJ1IjoiYmgzMDAiLCJhIjoiY2xlaWpsZW91MDI0dDQxbnI4aWNueTVneiJ9.u0cO3o-dzacQpUpt2rxLtA';
        // - render a map - done

        const map = new mapboxgl.Map({
            container: 'map', // container ID
            // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
            style: 'mapbox://styles/mapbox/outdoors-v12', // style URL
            center: [11.255, 43.77], // starting position
            zoom: 13 // starting zoom

        });
        map.addControl(new mapboxgl.FullscreenControl());
        map.addControl(new mapboxgl.NavigationControl());//add zoom controllers and rotation
        //*********************************  
        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            // When active the map will receive updates to the device's location as it changes.
            trackUserLocation: true,
            // Draw an arrow next to the location dot to indicate which direction the device is heading.
            showUserHeading: true
        })
        );

        
        let markers = []
         map.on('click', e => {
          const signed_in = <%= signed_in %>;
          if (!signed_in) {
            alert("Please sign in");
            return;
          }
            const coordinates = e.lngLat;
            markers.push(new mapboxgl.Marker({scale: 2 /* was hoping this reduced the "accidental marker add on marker click" */})
            // how secure is setHTML? 
                .setLngLat(coordinates).setPopup(new mapboxgl.Popup().setHTML(
                        '<h3 style="text-align:center;">user content</h1>' +
                        `<div class="text-center">
                          <input type = "text" name = "lat" id = "lat" placeholder = "12.255">
                          <input type = "text" name = "lng" id = "lng" placeholder = "44.77">
                                                
                          </div>` + // [refactor] maybe not the most readable (or secure) way (also input type="submit" > button?) 
                         // do we want our own report litter page? 
                         '<br>'+

                        '<div class="text-center">'+
                        '<button id="add-marker" class="btn btn-success btn-sm">report litter</button>'   +
                        '</div>' +
                        '<br>'+

                        '<div class="text-center">'+
                        '<button class="btn btn-info btn-sm">Upload Photo</button>' +
                        '</div>' +
                        '<br>'+

                        '<div class="text-center">'+
                        '<button class="btn btn-info btn-sm">Take Photo</button>' +
                        '</div>'+
                        '<br>'+

                        '<div class="text-center">'+
                        '<button class="btn btn-danger btn-sm">Litter Removed</button>' +
                        '</div>'
                        
                    )
                )
                .addTo(map));
                markers.map(marker => marker.togglePopup())
        });
        document.querySelector("click", e => {
          // don't think it matters that these are strings & not numbers for now 
          const lat = document.querySelector("#lat").value
          const lng = document.querySelector("#lng").value
          const data = {lat, lng}
          fetch("users/add-marker", {
            method: "POST", // or 'PUT'
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("Success:", data);
              alert("Your marker has been added")
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        })
    </script>
  </body>
</html>
