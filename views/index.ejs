<!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <title><Litter Map Home></title>
      <link rel='stylesheet' href='/stylesheets/style.css' />
      <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
      <link href="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.css" rel="stylesheet">
      <script src="https://api.mapbox.com/mapbox-gl-js/v2.13.0/mapbox-gl.js"></script>
      <script src='https://code.jquery.com/jquery-1.11.0.min.js'></script>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
      <style>

        body {
            margin: 0;
            padding: 0;
          }
          
        #map {
            position: absolute;
            top: auto;
            left: 0;
            right: 10%;
            width: 100%;
            height: 100%;
          }
   
      </style>

<div>
  <!--************************** boostrap5 menu bar****************************************-->
  <!-- Sidebar/menu -->
  <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Litter Map</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="collapsibleNavbar">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="#">User</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Post&Comment</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Events</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Sign-in</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Sign-off</a>
          </li>     
        </ul>
      </div>
    </div>
  </nav> 
</div>
<!--**************************End Menu Bar****************************************-->

</head>
<body>
    <div id="map"></div>
    <script>
        /*
        TODO: 
            - render a map - done 
            - add a marker to the map - done 
            - dynamically add markers to the map - postponed (can't do this since we don't have any server logic)
                - [instead] loop through a JS object which contains where the markers will go 
                - add the marker to the map 
            - allow the user to add a marker to the map on click of the button 
                - Giacomo: at the moment the user will manually type their coordinates, later we'll get the coordinates via where the user clicked the map - done
                - Patrick: add an html input field - done
                - Patrick: add a html button - done
                - when the user clicks button 
                - get the content of the input field 
                - update the markers array in the above JS object - in progress
        */

        mapboxgl.accessToken = 'pk.eyJ1IjoiYmgzMDAiLCJhIjoiY2xlaWpsZW91MDI0dDQxbnI4aWNueTVneiJ9.u0cO3o-dzacQpUpt2rxLtA';
        // - render a map - done

        const map = new mapboxgl.Map({
            container: 'map', // container ID
            // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
            style: 'mapbox://styles/mapbox/outdoors-v12', // style URL
            center: [11.255, 43.77], // starting position
            zoom: 13 // starting zoom

        });
        map.addControl(new mapboxgl.FullscreenControl());
        map.addControl(new mapboxgl.NavigationControl());//add zoom controllers and rotation
        //*********************************  
        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            // When active the map will receive updates to the device's location as it changes.
            trackUserLocation: true,
            // Draw an arrow next to the location dot to indicate which direction the device is heading.
            showUserHeading: true
        })
        );

        
        let markers = []
         map.on('click', e => {
            const coordinates = e.lngLat;
            markers.push(new mapboxgl.Marker({scale: 2 /* was hoping this reduced the "accidental marker add on marker click" */})
            // how secure is setHTML? 
                .setLngLat(coordinates).setPopup(new mapboxgl.Popup().setHTML(
                        '<h1>user content</h1>' +
                        '<button class="trigger">Report Litter</button>' +
                        '<button class="trigger">Upload Photo</button>' +
                        '<button class="trigger">Take Photo</button>' +
                        '<button class="trigger">Litter Removed</button>'
                    )
                )
                .addTo(map));
                markers.map(marker => marker.togglePopup())
        });
    </script>
  </body>
</html>